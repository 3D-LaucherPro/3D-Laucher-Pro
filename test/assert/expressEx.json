{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "express"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "express",
                "raw": "express",
                "sType": "string"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "app"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "express"
            },
            "arguments": [],
            "sType": "IO"
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "sum"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "a"
              },
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "BinaryExpression",
              "operator": "+",
              "sType": "number",
              "left": {
                "type": "Identifier",
                "name": "a"
              },
              "right": {
                "type": "Identifier",
                "name": "b"
              }
            },
            "generator": false,
            "expression": true
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "IO"
              },
              "property": {
                "type": "Identifier",
                "name": "createIO"
              }
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "cb"
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "app"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "get",
                      "isSubscript": false
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "/",
                      "raw": "/",
                      "sType": "string"
                    },
                    {
                      "type": "Identifier",
                      "name": "cb"
                    }
                  ]
                },
                "generator": false,
                "expression": true
              }
            ],
            "nextParams": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "name": "then"
          }
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "val"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sum"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 5,
                            "raw": "5",
                            "sType": "number"
                          },
                          {
                            "type": "Literal",
                            "value": 15,
                            "raw": "15",
                            "sType": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "sType": "bool",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": ">",
                      "sType": "bool",
                      "left": {
                        "type": "Identifier",
                        "name": "val"
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "*",
                        "sType": "number",
                        "left": {
                          "type": "Literal",
                          "value": 4,
                          "raw": "4",
                          "sType": "number"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 15,
                          "raw": "15",
                          "sType": "number"
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "sType": "bool"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "res"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "send",
                            "isSubscript": false
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "welcome",
                            "raw": "welcome",
                            "sType": "string"
                          }
                        ]
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "res"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "send",
                        "isSubscript": false
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "Hello World",
                        "raw": "Hello World",
                        "sType": "string"
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false
          }
        ],
        "ioParams": [
          {
            "type": "Identifier",
            "name": "req"
          },
          {
            "type": "Identifier",
            "name": "res"
          }
        ],
        "sType": "IO"
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "listen",
            "isSubscript": false
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": 3000,
            "raw": "3000",
            "sType": "number"
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}
