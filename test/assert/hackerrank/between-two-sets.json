{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "a"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "sType": "number"
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "sType": "number"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "b"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 16,
                "raw": "16",
                "sType": "number"
              },
              {
                "type": "Literal",
                "value": 32,
                "raw": "32",
                "sType": "number"
              },
              {
                "type": "Literal",
                "value": 96,
                "raw": "96",
                "sType": "number"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "gcd"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "a"
              },
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "SwitchStatement",
                  "cases": [
                    {
                      "type": "SwitchCase",
                      "consequent": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Identifier",
                            "name": "b"
                          }
                        }
                      ],
                      "test": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "sType": "number"
                      }
                    },
                    {
                      "type": "SwitchCase",
                      "test": null,
                      "consequent": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "gcd"
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": "%",
                                "sType": "number",
                                "left": {
                                  "type": "Identifier",
                                  "name": "b"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "a"
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "a"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "discriminant": {
                    "type": "Identifier",
                    "name": "a"
                  }
                }
              ]
            },
            "generator": false,
            "expression": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "lcm"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "a"
              },
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "BinaryExpression",
              "operator": "/",
              "sType": "number",
              "left": {
                "type": "BinaryExpression",
                "operator": "*",
                "sType": "number",
                "left": {
                  "type": "Identifier",
                  "name": "a"
                },
                "right": {
                  "type": "Identifier",
                  "name": "b"
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "gcd"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "a"
                  },
                  {
                    "type": "Identifier",
                    "name": "b"
                  }
                ]
              }
            },
            "generator": false,
            "expression": true
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "first"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "a"
              },
              "property": {
                "type": "Identifier",
                "name": "reduce",
                "isSubscript": false
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "lcm"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "second"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "b"
              },
              "property": {
                "type": "Identifier",
                "name": "reduce",
                "isSubscript": false
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "gcd"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "betweenTwosets"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "acc"
              },
              {
                "type": "Identifier",
                "name": "a"
              },
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "ConditionalExpression",
              "test": {
                "type": "BinaryExpression",
                "operator": ">",
                "sType": "bool",
                "left": {
                  "type": "Identifier",
                  "name": "a"
                },
                "right": {
                  "type": "Identifier",
                  "name": "b"
                }
              },
              "consequent": {
                "type": "Identifier",
                "name": "acc"
              },
              "alternate": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "sType": "bool",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "%",
                    "sType": "number",
                    "left": {
                      "type": "Identifier",
                      "name": "b"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "a"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "sType": "number"
                  }
                },
                "consequent": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "betweenTwosets"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "sType": "number",
                      "left": {
                        "type": "Identifier",
                        "name": "acc"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "sType": "number"
                      }
                    },
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "sType": "number",
                      "left": {
                        "type": "Identifier",
                        "name": "first"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "a"
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "b"
                    }
                  ]
                },
                "alternate": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "betweenTwosets"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "acc"
                    },
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "sType": "number",
                      "left": {
                        "type": "Identifier",
                        "name": "first"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "a"
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "b"
                    }
                  ]
                }
              }
            },
            "generator": false,
            "expression": true
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "name": "log"
          }
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "betweenTwosets"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "sType": "number"
              },
              {
                "type": "Identifier",
                "name": "first"
              },
              {
                "type": "Identifier",
                "name": "second"
              }
            ]
          }
        ],
        "sType": "IO"
      }
    }
  ],
  "sourceType": "script"
}
